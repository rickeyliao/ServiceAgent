// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bootstrapchg.proto

package rpccmdservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BootstrapCHGReq struct {
	Op                   bool     `protobuf:"varint,1,opt,name=op,proto3" json:"op,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BootstrapCHGReq) Reset()         { *m = BootstrapCHGReq{} }
func (m *BootstrapCHGReq) String() string { return proto.CompactTextString(m) }
func (*BootstrapCHGReq) ProtoMessage()    {}
func (*BootstrapCHGReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_8050f46f3483e483, []int{0}
}

func (m *BootstrapCHGReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BootstrapCHGReq.Unmarshal(m, b)
}
func (m *BootstrapCHGReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BootstrapCHGReq.Marshal(b, m, deterministic)
}
func (m *BootstrapCHGReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BootstrapCHGReq.Merge(m, src)
}
func (m *BootstrapCHGReq) XXX_Size() int {
	return xxx_messageInfo_BootstrapCHGReq.Size(m)
}
func (m *BootstrapCHGReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BootstrapCHGReq.DiscardUnknown(m)
}

var xxx_messageInfo_BootstrapCHGReq proto.InternalMessageInfo

func (m *BootstrapCHGReq) GetOp() bool {
	if m != nil {
		return m.Op
	}
	return false
}

func (m *BootstrapCHGReq) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*BootstrapCHGReq)(nil), "rpccmdservice.BootstrapCHGReq")
}

func init() { proto.RegisterFile("bootstrapchg.proto", fileDescriptor_8050f46f3483e483) }

var fileDescriptor_8050f46f3483e483 = []byte{
	// 164 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xca, 0xcf, 0x2f,
	0x29, 0x2e, 0x29, 0x4a, 0x2c, 0x48, 0xce, 0x48, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x2d, 0x2a, 0x48, 0x4e, 0xce, 0x4d, 0x29, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0x95, 0xe2, 0x4d,
	0x49, 0x4d, 0x4b, 0x2c, 0xcd, 0x29, 0x81, 0xc8, 0x2a, 0x59, 0x73, 0xf1, 0x3b, 0xc1, 0xf4, 0x38,
	0x7b, 0xb8, 0x07, 0xa5, 0x16, 0x0a, 0xf1, 0x71, 0x31, 0xe5, 0x17, 0x48, 0x30, 0x2a, 0x30, 0x6a,
	0x70, 0x04, 0x31, 0xe5, 0x17, 0x08, 0x49, 0x70, 0xb1, 0x27, 0xa6, 0xa4, 0x14, 0xa5, 0x16, 0x17,
	0x4b, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x46, 0xf1, 0x5c, 0x3c, 0xc8, 0x9a, 0x85,
	0xfc, 0xb9, 0xf8, 0x9d, 0x33, 0x12, 0xf3, 0xd2, 0x53, 0xe1, 0xa2, 0x42, 0x72, 0x7a, 0x28, 0xd6,
	0xeb, 0xa1, 0x59, 0x26, 0x25, 0x85, 0x26, 0xef, 0x02, 0x71, 0x5d, 0x50, 0x6a, 0x71, 0x81, 0x12,
	0x43, 0x12, 0x1b, 0xd8, 0x91, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x78, 0x31, 0x06,
	0xd8, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BootstrapCHGClient is the client API for BootstrapCHG service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BootstrapCHGClient interface {
	ChangeBootstrap(ctx context.Context, in *BootstrapCHGReq, opts ...grpc.CallOption) (*DefaultResp, error)
}

type bootstrapCHGClient struct {
	cc *grpc.ClientConn
}

func NewBootstrapCHGClient(cc *grpc.ClientConn) BootstrapCHGClient {
	return &bootstrapCHGClient{cc}
}

func (c *bootstrapCHGClient) ChangeBootstrap(ctx context.Context, in *BootstrapCHGReq, opts ...grpc.CallOption) (*DefaultResp, error) {
	out := new(DefaultResp)
	err := c.cc.Invoke(ctx, "/rpccmdservice.BootstrapCHG/ChangeBootstrap", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BootstrapCHGServer is the server API for BootstrapCHG service.
type BootstrapCHGServer interface {
	ChangeBootstrap(context.Context, *BootstrapCHGReq) (*DefaultResp, error)
}

func RegisterBootstrapCHGServer(s *grpc.Server, srv BootstrapCHGServer) {
	s.RegisterService(&_BootstrapCHG_serviceDesc, srv)
}

func _BootstrapCHG_ChangeBootstrap_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BootstrapCHGReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BootstrapCHGServer).ChangeBootstrap(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpccmdservice.BootstrapCHG/ChangeBootstrap",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BootstrapCHGServer).ChangeBootstrap(ctx, req.(*BootstrapCHGReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _BootstrapCHG_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpccmdservice.BootstrapCHG",
	HandlerType: (*BootstrapCHGServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ChangeBootstrap",
			Handler:    _BootstrapCHG_ChangeBootstrap_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bootstrapchg.proto",
}
